<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="smali_help_names">
		<item>寄存器</item>
		<item>文字值</item>
		<item>原始数据类型</item>
	</string-array>
	<string-array name="smali_help_values" formatted="false">
		<item>vA 是一个 4 位寄存器，取值范围为 v0 - v15\nvAA是8位寄存器，取值范围为v0 - v255\nvAAAA 是一个 16 位寄存器，取值范围为 v0 - v65535</item>
		<item>使用0xF、0xFF等。来表示文字值。与寄存器一样，数字 F 用于表示一系列值，例如：\n0xF值的范围用[-0x8,0x7]表示\n0xFF的取值范围用[-0x80,0x7F]表示</item>
		<item>V - 无效，Z - 布尔值，B - 字节\nC - 字符，S - 短，I - 整数\nJ - 长，F - 浮点，D - 双\nvoid：只能用于返回类型\n布尔值：存储值 true 或 false\nbyte：存储-128到127之间的整数，占用1个字节\nShort：存储从-32768到32767的整数，占用2个字节\nint：存储从-2147483648到2147483647的整数，占用4个字节\nlong：存储从-9223372036854775808到9223372036854775807的整数，占用8个字节\ndouble：存储±4.9*10³²⁴到±1.7976931348623157*10³⁰⁸之间的浮点数，占用8个字节。点用作小数文字中的小数分隔符。\nfloat：存储从-3.4*10³⁸到3.4*10³⁸的浮点数，占用4个字节\nchar：以UTF-16编码存储单个字符，占用2个字节，因此存储值的范围为0到65535。</item>
		<item>没有行动。</item>
		<item>将寄存器 vB 的值移至寄存器 vA。</item>
		<item>将 vBBBB 寄存器的值移至 vAA 寄存器。</item>
		<item>将 vBBBB 寄存器的值移至 vAAAA 寄存器。</item>
		<item>将寄存器对 (vB, vB+1) 的长整型/双精度值移至寄存器对 vA, vA+1。</item>
		<item>将寄存器对（vBBBB、vBBBB+1）的长整型/双精度值移至寄存器对 vAA、vAA+1。</item>
		<item>将寄存器对 (vBBBB、vBBBB+1) 的长整型/双精度值移至寄存器对 vAAAA、vAAAA+1。</item>
		<item>将对象引用从 vB 寄存器移至 vA 寄存器。</item>
		<item>将对象引用从 vBBBB 寄存器移动到 vAA 寄存器。</item>
		<item>将对象引用从 vBBBB 寄存器移动到 vAAAA 寄存器。</item>
		<item>将先前调用的方法的返回值移至 vAA 寄存器中。</item>
		<item>将先前调用的方法返回的 long/double 值移至寄存器对 vAA、vAA+1 中。</item>
		<item>将先前调用的方法返回的对象引用移动到 vAA 寄存器中。</item>
		<item>将方法调用期间（执行期间）发出的排除对象的引用移至 vAA 寄存器。</item>
		<item>返回无返回值。</item>
		<item>通过返回 vAA 寄存器中的值来返回。</item>
		<item>通过将 double/long 值返回到一对寄存器 vAA、vAA+1 中来返回。</item>
		<item>通过从 vAA 寄存器返回对象引用的值来返回。</item>
		<item>将 4 位常量放入 vA 寄存器中。</item>
		<item>将 16 位常量放入 vAA 寄存器中。</item>
		<item>将整数常量放入 vAA 寄存器中。</item>
		<item>将 16 位常数放入 vAA 寄存器的高位。用于初始化 float（浮点）值。</item>
		<item>将 16 位整型常量放入寄存器对 vAA、vAA+1 中，将整型常量转换为长整型常量。</item>
		<item>将 32 位整型常量放入寄存器对 vAA、vAA+1 中，将整型常量转换为长整型常量。</item>
		<item>将 64 位常量放入寄存器对 vAA、vAA+1 中。</item>
		<item>将 16 位常量放入寄存器对 vAA、vAA+1 的前 16 位中。用于初始化双精度（浮点）值。</item>
		<item>将对指定字符串的引用放入 vAA 寄存器中。</item>
		<item>将对指定字符串的引用放入 vAA 寄存器中。</item>
		<item>将由 string_id 标识的字符串常量（字符串）的引用放入 vAA 寄存器中。</item>
		<item>获取vAA寄存器引用的对象监视器。</item>
		<item>释放vAA寄存器引用的对象监视器。</item>
		<item>检查 vAA 寄存器中包含的对象引用是否可以转换为 type_id 标识的类。如果不能，则抛出 ClassCastException，否则继续执行。</item>
		<item>检查 vB 寄存器的内容是否是由 type_id 标识的类的实例。如果存在则将寄存器 vA 设置为非零，如果不存在则设置为 0。\nvA = vB 实例类型 ? 10</item>
		<item>确定 vB 寄存器中的数组元素数并将值放入 vA 寄存器中。\nvA = vB.长度</item>
		<item>创建对象类型的实例并将对所创建实例的引用放置在 vAA 寄存器中。</item>
		<item>创建一个新的 type_id 变量数组，其大小为寄存器 vB 元素，并将对该数组的引用放置在寄存器 vA 中。</item>
		<item>创建一个 type_id 类型的新数据数组并用参数填充它（即，不允许使用 long/double 数组，但允许引用类型）。可以使用紧随该语句之后的 move-result-object 语句来获取对新创建的数组的引用（如果要使用该语句）。</item>
		<item>创建一个 type_id 类型的新数据数组，并用一系列参数填充它（即，没有 long/double 数组，但可以接受引用类型）。可以使用紧随该语句之后的 move-result-object 语句来获取对新创建的数组的引用（如果要使用该语句）。</item>
		<item>用静态数据填充 vAA 寄存器中引用的数组。数据位置是当前指令的位置和偏移量之和。</item>
		<item>抛出异常对象。对 vAA 寄存器中异常对象的引用。</item>
		<item>无条件跳转到短（整数）8 位偏移量。</item>
		<item>无条件跳转到 16 位偏移量。</item>
		<item>无条件跳转到 32 位偏移量。</item>
		<item>当控制常数彼此接近（连续）时实现 Switch 运算符。该指令使用索引表。特定情况的指令偏移量由 vAA 索引确定。如果 vAA 索引超出表范围，则继续执行下一条语句（默认）。</item>
		<item>在稀疏表的情况下实现 Switch 运算符。该指令使用一个表来指定每个常量的偏移量。如果在表中没有找到匹配项，则执行下一条语句（默认情况）。</item>
		<item>比较vBB和vCC中的float（浮点）值并将整数值放入vAA寄存器中：\nvAA = vBB &lt; vCC ?是：1，否：-1，等于：0</item>
		<item>比较vBB和vCC中的float（浮点）值并将整数值放入vAA寄存器中：\nvAA = vBB &lt; vCC ?是：1，否：-1，等于：0</item>
		<item>比较vBB和vCC中的双精度（浮点）值并将整数值放入vAA寄存器中：\nvAA = (vBB, vBB+1) &lt; (vCC, vCC+1) ？ y\n是：1，否：-1，等于：0</item>
		<item>比较vBB和vCC中的双精度（浮点）值并将整数值放入vAA寄存器中：\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ?是：1，否：-1，等于：0</item>
		<item>比较vBB和vCC中的长（整型）值并将整型（整型）值放入vAA寄存器中：\nvAA = (vBB, vBB+1) > (vCC, vCC+1) ?是：1，否：-1，等于：0</item>
		<item>如果 vA == vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（eq 是等于的缩写）</item>
		<item>如果 vA != vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（ne 是不等于的缩写）</item>
		<item>如果 vA &lt; vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（它是小于的缩写）</item>
		<item>如果 vA &lt;= vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（le 是小于或等于/小于或等于的缩写）</item>
		<item>如果 vA > vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（gt 是大于/超过的缩写）</item>
		<item>如果 vA >= vB，则跳转到指定标签。 vA 和 vB 包含整数值。\n（ge 是大于或等于的缩写）</item>
		<item>如果 vAA == 0，则跳转到指定标签。vAA 包含整数值。\n（eqz 是“等于零”的缩写）</item>
		<item>如果 vAA != 0，则跳转到指定标签。vAA 包含一个整数值。\n（nez 是“不等于零”的缩写）</item>
		<item>如果 vAA &lt; 0，则跳转到指定标签。vAA 包含整数值。\n（ltz 是小于零的缩写）</item>
		<item>如果 vAA &lt;= 0，则跳转到指定标签。vAA 包含整数值。\n（lez 是小于或等于零/小于或等于零的缩写）</item>
		<item>如果 vAA > 0，则跳转到指定标签。vAA 包含整数值。\n（gtz 是大于零的缩写）</item>
		<item>如果 vAA >= 0，则跳转到指定标签。vAA 包含整数值。\n（gez 是大于或等于零的缩写）</item>
		<item>从 vBB 中引用的数组中获取 vCC 中包含的索引处的整数值，并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组中获取 double/long 值，并将其放入寄存器对 vAA、vAA+1 中。\n(vAA, vAA+1) = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组接收对对象的引用，并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组中获取一个布尔值，并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组中检索一个字节（整数）值，并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组中检索 char 值并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>在 vCC 中包含的索引处，从 vBB 中引用的数组中检索一个短（整数）值，并将其放入 vAA 寄存器中。\nvAA = vBB[vCC]</item>
		<item>将 vAA 中的整数值放入 vBB 中引用的数组中，其中元素包含 vCC 寄存器。\nvBB[vCC] = vAA</item>
		<item>将寄存器对 vAA、vAA+1 中的双精度/长整型值放入 vBB 中引用的数组中，其中元素包含 vCC 寄存器。\nvBB[vCC] = (vAA, vAA+1)</item>
		<item>将 vAA 中对对象的引用放入 vBB 中引用的数组中，其中元素带有 vCC 寄存器。\nvBB[vCC] = vAA</item>
		<item>将 vAA 中的布尔值放入 vBB 引用的数组中，其中元素包含 vCC 寄存器。\nvBB[vCC] = vAA</item>
		<item>将 vAA 中的字节（整数）值放入 vBB 中引用的数组中，其中元素包含寄存器 vCC。\nvBB[vCC] = vAA</item>
		<item>将 vAA 中的 char（字符）值放入 vBB 中由寄存器 vCC 的元素引用的数组中。\nvBB[vCC] = vAA</item>
		<item>将 vAA 中的短（整数）值放入 vBB 中引用的数组中，其中元素包含 vCC 寄存器。\nvBB[vCC] = vAA</item>
		<item>从实例字段读取值并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>从实例字段读取双精度/长整型值并将其放入一对寄存器（vA、vA+1）中。对包含此字段的类的引用位于 vB 寄存器中。\n(vA, vA+1) = vB. 场</item>
		<item>从实例字段读取对象引用并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>从实例字段读取布尔值并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>从实例字段读取字节（整数）值并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>从实例字段读取 char 值并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>从实例字段读取一个短（整数）值并将其放入 vA 寄存器中。对包含此字段的类的引用位于 vB 寄存器中。\nvA = vB. 场</item>
		<item>将 vA 寄存器中的值放入实例字段中。对包含此字段的类的引用位于 vB 寄存器中。\nvB. 场 = vA</item>
		<item>将寄存器对 (vA, vA+1) 中的双精度/长整型值放入实例字段。对包含此字段的类的引用位于 vB 寄存器中。\nvB. 场 = (vA, vA+1)</item>
		<item>将 vA 寄存器中的对象引用放入实例字段中。对包含此字段的类的引用位于 vB 寄存器中。\nvB. 场 = vA</item>
		<item>将 vA 寄存器中的布尔值放入实例字段中。对包含此字段的类的引用位于 vB 寄存器中。\nvB. 场 = vA</item>
		<item>设置寄存器vB引用的实例中指定布尔字段的字节（整数）值等于寄存器vA的值，即：\nvB. 场 = vA</item>
		<item>设置寄存器vB引用的实例中指定布尔字段的char（字符）值等于寄存器vA的值，即：\nvB. 场 = vA</item>
		<item>将寄存器 vB 引用的实例中指定布尔字段的短（整数）值设置为等于寄存器 vA 的值，即：\nvB. 场 = vA</item>
		<item>从静态字段读取值并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取 double/long 值并将其放入一对寄存器 vAA、vAA+1 中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取对象引用并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取布尔值并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取字节（整数）值并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取 char 值并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>从静态字段读取一个短（整数）值并将其放入 vAA 寄存器中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中的值放入字段（静态字段）中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将一对寄存器 vAA、vAA+1 中的双精度/长整型值放入字段（静态字段）中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中对对象的引用放入字段（静态字段）中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中的布尔值放入字段（静态字段）中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中的字节（整数）值放入字段（静态字段）中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中的 char 值放入静态字段中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>将 vAA 寄存器中的短（整数）值放入静态字段中。不使用包含对包含此字段的类的引用的寄存器。</item>
		<item>调用（运行）带参数的虚拟方法。参数用大括号表示。第一个参数（寄存器 v2）包含对包含被调用方法的类的引用，第二个参数（寄存器 v3 的内容）传递给被调用方法。</item>
		<item>直接从父类调用（运行）带有参数的虚拟方法。</item>
		<item>在没有虚拟方法权限的情况下调用（运行）带参数的方法。</item>
		<item>调用（运行）带参数的静态方法。参数用大括号表示。参数（寄存器 v3 的内容）被传递给被调用的方法。包含被调用方法的类在大括号后面指示。</item>
		<item>调用（运行）带参数的接口方法。</item>
		<item>调用（运行）带参数的虚方法，但参数必须按顺序包含在带有数字的寄存器中。</item>
		<item>直接从父类调用（运行）带参数的虚方法，但参数必须包含在具有连续编号的寄存器中。</item>
		<item>在没有虚拟方法权限的情况下调用（运行）带参数的方法，但参数必须包含在按顺序编号的寄存器中。</item>
		<item>调用（运行）带参数的静态方法，但参数必须包含在具有连续编号的寄存器中。</item>
		<item>调用（运行）带参数的接口方法，但参数必须包含在按顺序编号的寄存器中。</item>
		<item>对于整数类型的值计算 vA = -vB。</item>
		<item>计算整数值 vA = ~vB。\nvA = ~vB</item>
		<item>对于 long（整数）类型的值，计算 (vA, vA+1) = -(vB, vB+1)。</item>
		<item>对于 long（整数）类型的值，计算 (vA, vA+1) = ~(vB, vB+1)。</item>
		<item>计算浮点值的 vA = -vB。</item>
		<item>计算双精度（浮点）值的 (vA, vA+1) = -(vB, vB+1)。</item>
		<item>将整数从 vB 转换为长整型并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (长) vB</item>
		<item>将整数从 vB 转换为浮点数并将其存储在 vA 寄存器中。\nvA =（浮点数）vB</item>
		<item>将整数从 vB 转换为双精度型（浮点型）并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (双) vB</item>
		<item>将 vB、vB+1 中的长整型值转换为整型值并将其存储在 vA 寄存器中。\nvA = (int) (vB, vB+1)</item>
		<item>将 long（整数）值从 vB、vB+1 转换为 float（浮点）并将其存储在 vA 寄存器中。\nvA =（浮点数）（vB，vB+1）</item>
		<item>将长整型值从 vB、vB+1 转换为双精度型（浮点型）并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (双) (vB, vB+1)</item>
		<item>将浮点（floating point）值从 vB 转换为整数（integer）值，并将其存储在 vA 寄存器中。\nvA = (int)vB</item>
		<item>将 float（浮点）值从 vB 转换为 long（整数）值，并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (长) vB</item>
		<item>将 float（浮点）值从 vB 转换为 double（浮点）值，并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (双) vB</item>
		<item>将 vB、vB+1 中的双精度（浮点）值转换为整型（整数）值并将其存储在 vA 寄存器中。\nvA = (int) (vB, vB+1)</item>
		<item>将双精度（浮点）值从 vB、vB+1 转换为长整型（整数）值并将其存储在寄存器对 vA、vA+1 中。\n(vA, vA+1) = (长) (vB, vB+1)</item>
		<item>将 double（浮点）值从 vB、vB+1 转换为 float（浮点）值并将其存储在 vA 寄存器中。\nvA =（浮点数）（vB，vB+1）</item>
		<item>将整数值从 vB 转换为字节值并将其存储在 vA 寄存器中。\nvA =（字节）vB</item>
		<item>将整数值从 vB 转换为字符值并将其存储在 vA 寄存器中。\nvA = (字符)vB</item>
		<item>将整数值从 vB 转换为短值并将其存储在 vA 寄存器中。\nvA =（短）vB</item>
		<item>计算 vBB + vCC 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB + vCC</item>
		<item>计算 vBB - vCC 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB - vCC</item>
		<item>计算 vBB * vCC 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB * vCC</item>
		<item>计算 vBB / vCC 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB / vCC</item>
		<item>计算 vBB % vCC 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB % vCC</item>
		<item>计算 vBB 和 vCC（逻辑与）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB &amp; vCC</item>
		<item>计算 vBB | vCC（逻辑或）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB |虚拟CC</item>
		<item>计算 vBB ^ vCC（异或）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB ^ vCC</item>
		<item>将 vBB 左移 vCC 指定的位数，并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB &lt;&lt; vCC</item>
		<item>将 vBB 右移 vCC 指定的位数，并将结果存储到 vAA 寄存器中。所有值都是整数。\nvAA = vBB >> vCC</item>
		<item>将 vBB 向右移动 vCC 指定的位数（不保留符号），并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB >>> vCC</item>
		<item>计算 (vBB, vBB+1) + (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) + (vCC, vCC+1)</item>
		<item>计算（vBB，vBB+1）-（vCC，vCC+1）并将结果存储到寄存器对vAA，vAA+1中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) - (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) * (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) * (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) / (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) / (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) % (vCC, vCC+1) 并将结果存储到寄存器对 vAA, vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) % (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) &amp; (vCC, vCC+1)（逻辑与）并将结果存储到寄存器对 vAA、vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) &amp; (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) | (vCC，vCC+1)（逻辑或）并将结果存储在一对寄存器vAA，vAA+1中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) | (vAA, vAA+1) = (vBB, vBB+1) | （vCC，vCC+1）</item>
		<item>计算 (vBB, vBB+1) ^ (vCC, vCC+1)（异与）并将结果存储到寄存器对 vAA、vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) ^ (vCC, vCC+1)</item>
		<item>将 vBB、vBB+1 左移 vCC 指定的位数，并将结果存储到寄存器对 vAA、vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) &lt;&lt; vCC</item>
		<item>将 vBB、vBB+1 右移 vCC 指定的位数，并将结果存储到寄存器对 vAA、vAA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) >> vCC</item>
		<item>将 vBB、vBB+1 右移，不保留符号 vCC 指定的位数，并将结果存储在一对寄存器 vAA、vA+1 中。所有值都是长整型（long）。\n(vAA, vAA+1) = (vBB, vBB+1) >>> vCC</item>
		<item>计算 vBB + vCC 并将结果存储在 vAA 寄存器中。所有值都是浮点数。\nvAA = vBB + vCC</item>
		<item>计算 vBB - vCC 并将结果存储在 vAA 寄存器中。所有值都是浮点数。\nvAA = vBB - vCC</item>
		<item>计算 vBB * vCC 并将结果存储在 vAA 寄存器中。所有值都是浮点数。\nvAA = vBB * vCC</item>
		<item>计算 vBB / vCC 并将结果存储在 vAA 寄存器中。所有值都是浮点数。\nvAA = vBB / vCC</item>
		<item>计算 vBB % vCC 并将结果存储在 vAA 寄存器中。所有值都是浮点数。\nvAA = vBB % vCC</item>
		<item>计算 (vBB, vBB+1) + (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是双精度（浮点）。\n(vAA, vAA+1) = (vBB, vBB+1) + (vCC, vCC+1)</item>
		<item>计算（vBB，vBB+1）-（vCC，vCC+1）并将结果存储到寄存器对vAA，vAA+1中。所有值都是双精度（浮点）。\n(vAA, vAA+1) = (vBB, vBB+1) - (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) * (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是双精度（浮点）。\n(vAA, vAA+1) = (vBB, vBB+1) * (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) / (vCC, vCC+1) 并将结果存储在寄存器对 vAA, vAA+1 中。所有值都是双精度（浮点）。\n(vAA, vAA+1) = (vBB, vBB+1) / (vCC, vCC+1)</item>
		<item>计算 (vBB, vBB+1) % (vCC, vCC+1) 并将结果存储到寄存器对 vAA, vAA+1 中。所有值都是双精度（浮点）。\n(vAA, vAA+1) = (vBB, vBB+1) % (vCC, vCC+1)</item>
		<item>计算 vA + vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA + vB</item>
		<item>计算 vA - vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA - vB</item>
		<item>计算 vA * vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA * vB</item>
		<item>计算 vA / vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA / vB</item>
		<item>计算 vA % vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA % vB</item>
		<item>计算 vA 和 vB（逻辑与）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA &amp; vB</item>
		<item>计算 vA | vB（逻辑或）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA | VB</item>
		<item>计算 vA ^ vB（异或）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA^vB</item>
		<item>将 vA 左移 vB 指定的位数，并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA &lt;&lt; vB</item>
		<item>将 vA 右移 vB 指定的位数，并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA >> vB</item>
		<item>将 vA 向右移动 vB 指定的位数（不保留其符号），并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vA >>> vB</item>
		<item>计算 (vA, vA+1) + (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) + (vB, vB+1)</item>
		<item>计算 (vA, vA+1) - (vB, vB+1) 并将结果存储在一对寄存器 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) - (vB, vB+1)</item>
		<item>计算 (vA, vA+1) * (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) * (vB, vB+1)</item>
		<item>计算 (vA, vA+1) / (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) / (vB, vB+1)</item>
		<item>计算 (vA, vA+1) % (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) % (vB, vB+1)</item>
		<item>计算 (vA, vA+1) &amp; (vB, vB+1)（逻辑与）并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) &amp; (vB, vB+1)</item>
		<item>计算 (vA, vA+1) | (vB，vB+1)（逻辑或）并将结果存储在一对寄存器vA，vA+1中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) | (vA, vA+1) = (vA, vA+1) | （vB，vB+1）</item>
		<item>计算 (vA, vA+1) &amp; (vB, vB+1)（异或）并将结果存储在寄存器对 vA, vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) ^ (vB, vB+1)</item>
		<item>将 vA、vA+1 左移 vB 指定的位数，并将结果存储到寄存器对 vA、vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) &lt;&lt; vB</item>
		<item>将 vA、vA+1 右移 vB 指定的位数，并将结果存储到寄存器对 vA、vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) >> vB</item>
		<item>将 vA、vA+1 右移（不保留符号）vB 指定的位数，并将结果存储在一对寄存器 vA、vA+1 中。所有值都是长整型（long）。\n(vA, vA+1) = (vA, vA+1) >>> vB</item>
		<item>计算 vA + vB 并将结果存储在 vA 寄存器中。所有值都是浮点数。\nvA = vA + vB</item>
		<item>计算 vA - vB 并将结果存储在 vA 寄存器中。所有值都是浮点数。\nvA = vA - vB</item>
		<item>计算 vA * vB 并将结果存储在 vA 寄存器中。所有值都是浮点数。\nvA = vA * vB</item>
		<item>计算 vA / vB 并将结果存储在 vA 寄存器中。所有值都是浮点数。\nvA = vA / vB</item>
		<item>计算 vA % vB 并将结果存储在 vA 寄存器中。所有值都是浮点数。\nvA = vA % vB</item>
		<item>计算 (vA, vA+1) + (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是双精度（浮点）。\n(vA, vA+1) = (vA, vA+1) + (vB, vB+1)</item>
		<item>计算 (vA, vA+1) - (vB, vB+1) 并将结果存储在一对寄存器 vA, vA+1 中。所有值都是双精度（浮点）。\n(vA, vA+1) = (vA, vA+1) - (vB, vB+1)</item>
		<item>计算 (vA, vA+1) * (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是双精度（浮点）。\n(vA, vA+1) = (vA, vA+1) * (vB, vB+1)</item>
		<item>计算 (vA, vA+1) / (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是双精度（浮点）。\n(vA, vA+1) = (vA, vA+1) / (vB, vB+1)</item>
		<item>计算 (vA, vA+1) % (vB, vB+1) 并将结果存储在寄存器对 vA, vA+1 中。所有值都是双精度（浮点）。\n(vA, vA+1) = (vA, vA+1) % (vB, vB+1)</item>
		<item>计算 vB + 0xFFFF 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB + 0xFFFF</item>
		<item>计算 0xFFFF - vB 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = 0xFFFF - vB</item>
		<item>计算 vB * 0xFFFF 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB * 0xFFFF</item>
		<item>计算 vB / 0xFFFF 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB / 0xFFFF</item>
		<item>计算 vB % 0xFFFF 并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB% 0xFFFF</item>
		<item>计算 vB &amp; 0xFFFF（逻辑与）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB &amp; 0xFFFF</item>
		<item>计算 vB | 0xFFFF（逻辑或）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB | 0xFFFF</item>
		<item>计算 vB ^ 0xFFFF（异或）并将结果存储在 vA 寄存器中。所有值都是整数。\nvA = vB^0xFFFF</item>
		<item>计算 vBB + 0xFF 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB + 0xFF</item>
		<item>计算 0xFF - vBB 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = 0xFF - vBB</item>
		<item>计算 vBB * 0xFF 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB * 0xFF</item>
		<item>计算 vBB / 0xFF 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB / 0xFF</item>
		<item>计算 vBB % 0xFF 并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB % 0xFF</item>
		<item>计算 vBB &amp; 0xFF（逻辑与）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB &amp; 0xFF</item>
		<item>计算 vBB | 0xFF（逻辑或）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB | 0xFF</item>
		<item>计算 vBB ^ 0xFF（异或）并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA=vBB^0xFF</item>
		<item>将 vBB 左移 0xFF 指定的位数，并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB &lt;&lt; 0xFF</item>
		<item>将 vBB 右移 0xFF 指定的位数，并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB >> 0xFF</item>
		<item>将 vBB 右移 0xFF 指定的位数，并将结果存储在 vAA 寄存器中。所有值都是整数。\nvAA = vBB >>> 0xFF</item>
		<item>使用参数调用（运行）多态签名方法。自版本 038 以来存在于 Dex 文件中。</item>
		<item>调用（运行）带参数的多态签名方法，但参数必须包含在按顺序编号的寄存器中。自版本 038 以来存在于 Dex 文件中。</item>
		<item>允许（开始）使用参数调用站点。自版本 038 以来存在于 Dex 文件中。</item>
		<item>允许（启动）使用参数调用站点，但参数必须包含在按顺序编号的寄存器中。自版本 038 以来存在于 Dex 文件中。</item>
		<item>将对方法句柄的引用放置在 vAA 寄存器中。自版本 039 以来存在于 Dex 文件中。</item>
		<item>在 vAA 寄存器中放置对方法原型的引用。自版本 039 以来存在于 Dex 文件中。</item>
	</string-array>
    <string-array name="jadx_sets">
        <item>回退模式</item>
        <item>反混淆</item>
        <item>转义Unicode</item>
        <item>显示不一致的代码</item>
    </string-array>
	<string-array name="copy_variants">
		<item>改名</item>
		<item>仅重命名文件</item>
		<item>替换</item>
		<item>跳过</item>
	</string-array>
	<string-array name="menu_pos">
		<item>左侧</item>
		<item>右侧</item>
	</string-array>
	<string-array name="checksum_names">
        <item>全部大写</item>
        <item>用冒号分隔</item>
    </string-array>
	<string-array name="refresh_res">
        <item>添加新资源（仅限文件）</item>
        <item>删除丢失的资源</item>
    </string-array>
	<string-array name="sort">
		<item>名称</item>
		<item>名称（倒序）</item>
		<item>文件类型</item>
		<item>文件类型（倒序）</item>
		<item>文件大小</item>
		<item>文件大小（倒序）</item>
		<item>修改时间</item>
		<item>修改时间（倒序）</item>
	</string-array>
	<string-array name="color_var">
        <item>HEX-color</item>
        <item>Smali code</item>
        <item>A,R,G,B</item>
    </string-array>
	<string-array name="format">
		<item>@string/jks</item>
		<item>@string/pkcs12</item>
		<item>@string/bks</item>
		<item>@string/pk8</item>
	</string-array>
	<string-array name="resDecodeMode">
		<item>不编译</item>
		<item>反编译到主目录</item>
		<item>反编译到单独的目录</item>
	</string-array>
	<string-array name="converter_items">
		<item>文本 &lt;-&gt; Base64</item>
		<item>文本 &lt;-&gt; 统一编码</item>
		<item>文本 &lt;-&gt; 网址编码</item>
		<item>文本 &lt;-&gt; MD5</item>
		<item>文本 &lt;-&gt; SHA-1</item>
		<item>文本 &lt;-&gt; SHA-224</item>
		<item>文本 &lt;-&gt; SHA-256</item>
		<item>文本 &lt;-&gt; SHA-384</item>
		<item>文本 &lt;-&gt; SHA-512</item>
		<item>文本 &lt;-&gt; 数组（UTF-8）</item>
		<item>文本 &lt;-&gt; 数组（UTF-16）</item>
		<item>文本 &lt;-&gt; 数组（UTF-16LE）</item>
		<item>文本 &lt;-&gt; 数组（UTF-16BE）</item>
		<item>文本 &lt;-&gt; 数组（US-ASCII）</item>
		<item>文本 &lt;-&gt; 数组（ISO-8859-1）</item>
		<item>文本 &lt;-&gt; 数组（CP1251）</item>
		<item>十进制 &lt;-&gt; 二进制</item>
		<item>十进制 &lt;-&gt; 八进制</item>
		<item>十进制 &lt;-&gt; 十六进制</item>
		<item>十进制 &lt;-&gt; 十六进制（0x0）</item>
		<item>十进制 &lt;-&gt; 十六进制（0x00000000）</item>
		<item>浮点数 &lt;-> 二进制</item>
		<item>浮点数 &lt;-> 八进制</item>
		<item>浮点数 &lt;-> 十六进制</item>
		<item>浮点数 &lt;-> 十六进制（0x0）</item>
		<item>浮点数 &lt;-> 十六进制（0x00000000）</item>
		<item>颜色 &lt;-> Smali</item>
		<item>颜色 &lt;-> 十进制</item>
        <item>颜色 &lt;-> A,R,G,B</item>
	</string-array>
	<string-array name="installLocation">
		<item>末设置</item>
		<item>自动</item>
		<item>仅限内部</item>
		<item>首选外部</item>
	</string-array>
	<string-array name="xml_format_variants">
		<item>默认</item>
		<item>Apktool</item> 
		<item>Android Studio</item>
		<item>Simple Trick</item>
	</string-array>
	<string-array name="orientation_variants">
		<item>默认</item>
		<item>横屏</item> 
		<item>竖屏</item>
	</string-array>
	<string-array name="auto_save_variants">
		<item>关闭</item>
		<item>15秒</item>
		<item>30秒</item>
		<item>1分钟</item>
		<item>5分钟</item>
	</string-array>
	<string-array name="to_vector_values">
		<item>自适应图像（质量较低）</item>
		<item>高质量图像（更大尺寸）</item>
		<item>转换为SVG</item>
	</string-array>
	<string-array name="backup_values">
		<item>设置</item>
		<item>书签</item>
		<item>搜索/替换历史</item>
		<item>字典</item>
	</string-array>
	<string-array name="editor_themes">
		<item>默认</item>
		<item>新样式</item>
	</string-array>
	<string-array name="bing_translator_names">
		<item>自动检测</item>
		<item>阿塞拜疆语(拉丁语)</item>
		<item>阿尔巴尼亚语</item>
		<item>英语</item>
		<item>阿拉伯语</item>
		<item>亚美尼亚语</item>
		<item>南非荷兰语</item>
		<item>孟加拉语</item>
		<item>保加利亚语</item>
		<item>波斯尼亚语</item>
		<item>威尔士语</item>
		<item>匈牙利语</item>
		<item>越南语</item>
		<item>海地克里奥尔语</item>
		<item>荷兰语</item>
		<item>希腊语</item>
		<item>古吉拉特语</item>
		<item>丹麦语</item>
		<item>希伯来语</item>
		<item>印度尼西亚语</item>
		<item>爱尔兰语</item>
		<item>冰岛语</item>
		<item>西班牙语</item>
		<item>意大利语</item>
		<item>哈萨克语</item>
		<item>卡纳达语</item>
		<item>广东繁体</item>
		<item>加泰罗尼亚语</item>
		<item>克里塔语注释</item>
		<item>繁体中文</item>
		<item>简体中文</item>
		<item>韩语</item>
		<item>拉脱维亚语</item>
		<item>立陶宛语</item>
		<item>马达加斯加语</item>
		<item>马来语</item>
		<item>马拉雅拉姆语</item>
		<item>马耳他语</item>
		<item>毛利语</item>
		<item>马拉地语</item>
		<item>德语</item>
		<item>尼泊尔语</item>
		<item>挪威语</item>
		<item>奥里亚语</item>
		<item>旁遮普语</item>
		<item>波斯语</item>
		<item>波兰语</item>
		<item>葡萄牙语(巴西)</item>
		<item>葡萄牙语(葡萄牙)</item>
		<item>罗马尼亚语</item>
		<item>俄语</item>
		<item>萨摩亚语</item>
		<item>塞尔维亚语(西里尔语)</item>
		<item>塞尔维亚语(拉丁语)</item>
		<item>斯洛伐克语</item>
		<item>斯洛文尼亚语</item>
		<item>斯瓦希里语</item>
		<item>大溪地语</item>
		<item>泰语</item>
		<item>泰米尔语</item>
		<item>泰卢固语</item>
		<item>汤加语</item>
		<item>土耳其语</item>
		<item>乌克兰语</item>
		<item>乌尔都语</item>
		<item>斐济语</item>
		<item>菲律宾语</item>
		<item>芬兰语</item>
		<item>法语</item>
		<item>印地语</item>
		<item>苗语</item>
		<item>克罗地亚语</item>
		<item>捷克语</item>
		<item>瑞典语</item>
		<item>爱沙尼亚语</item>
		<item>玛雅语</item>
		<item>日语</item>
		<item>阿姆哈拉语</item>
		<item>阿萨姆语</item>
		<item>达里语</item>
		<item>法语(加拿大)</item>
		<item>因纽特语</item>
		<item>高棉语</item>
		<item>克林贡语(拉丁语)</item>
		<item>库尔德语(中部)</item>
		<item>库尔德语(北部)</item>
		<item>老挝语</item>
		<item>缅甸语</item>
		<item>普什图语</item>
		<item>提格里尼亚语</item>
	</string-array>
	<string-array name="google_translator_names">
		<item>自动检测</item>
		<item>南非荷兰语</item>
		<item>阿尔巴尼亚语</item>
		<item>阿姆哈拉语</item>
		<item>阿拉伯语</item>
		<item>亚美尼亚语</item>
		<item>阿塞拜疆语</item>
		<item>巴斯克语</item>
		<item>白俄罗斯语</item>
		<item>孟加拉语</item>
		<item>波斯尼亚语</item>
		<item>保加利亚语</item>
		<item>加泰罗尼亚语</item>
		<item>宿务语</item>
		<item>齐佩瓦语</item>
		<item>简体中文</item>
		<item>繁体中文</item>
		<item>科西嘉语</item>
		<item>克罗地亚语</item>
		<item>捷克语</item>
		<item>丹麦语</item>
		<item>荷兰语</item>
		<item>英语</item>
		<item>世界语</item>
		<item>爱沙尼亚语</item>
		<item>菲律宾语</item>
		<item>芬兰语</item>
		<item>法语</item>
		<item>弗里斯兰语</item>
		<item>加里西亚语</item>
		<item>格鲁吉亚语</item>
		<item>德语</item>
		<item>希腊语</item>
		<item>古吉拉特语</item>
		<item>海地克里奥尔语</item>
		<item>豪萨语</item>
		<item>夏威夷语</item>
		<item>希伯来语</item>
		<item>印地语</item>
		<item>苗语</item>
		<item>匈牙利语</item>
		<item>冰岛语</item>
		<item>伊博语</item>
		<item>印度尼西亚语</item>
		<item>爱尔兰语</item>
		<item>意大利语</item>
		<item>日语</item>
		<item>爪哇语</item>
		<item>卡纳达语</item>
		<item>哈萨克语</item>
		<item>高棉语</item>
		<item>韩语</item>
		<item>库尔德语(库尔曼吉)</item>
		<item>吉尔吉斯语</item>
		<item>老挝语</item>
		<item>拉丁语</item>
		<item>拉脱维亚语</item>
		<item>立陶宛语</item>
		<item>卢森堡语</item>
		<item>马其顿语</item>
		<item>马达加斯加语</item>
		<item>马来语</item>
		<item>马拉雅拉姆语</item>
		<item>马耳他语</item>
		<item>毛利语</item>
		<item>马拉地语</item>
		<item>蒙古语</item>
		<item>缅甸语</item>
		<item>尼泊尔语</item>
		<item>挪威语</item>
		<item>普什图语</item>
		<item>波斯语</item>
		<item>波兰语</item>
		<item>葡萄牙语</item>
		<item>旁遮普语</item>
		<item>罗马尼亚语</item>
		<item>俄语</item>
		<item>萨摩亚语</item>
		<item>苏格兰盖尔语</item>
		<item>塞尔维亚语</item>
		<item>塞索托语</item>
		<item>索纳语</item>
		<item>信德语</item>
		<item>僧伽罗语</item>
		<item>斯洛伐克语</item>
		<item>斯洛文尼亚语</item>
		<item>索马里语</item>
		<item>西班牙语</item>
		<item>圣丹内斯语</item>
		<item>斯瓦希里语</item>
		<item>瑞典语</item>
		<item>塔吉克语</item>
		<item>泰米尔语</item>
		<item>泰卢固语</item>
		<item>泰语</item>
		<item>土耳其语</item>
		<item>乌克兰语</item>
		<item>乌尔都语</item>
		<item>乌兹别克语</item>
		<item>越南语</item>
		<item>威尔士语</item>
		<item>科萨语</item>
		<item>意第绪语</item>
		<item>约鲁巴语</item>
		<item>祖鲁语</item>
		<item>奥里亚语</item>
		<item>旁遮普语</item>
		<item>卢旺达语</item>
		<item>鞑靼语</item>
		<item>土库曼语</item>
		<item>维吾尔族语</item>
	</string-array>
	<string-array name="yandex_translator_names">
		<item>自动检测</item>
		<item>南非荷兰语</item>
		<item>阿尔巴尼亚语</item>
		<item>阿姆哈拉语</item>
		<item>阿拉伯语</item>
		<item>亚美尼亚语</item>
		<item>阿塞拜疆语</item>
		<item>巴什基尔语</item>
		<item>巴斯克语</item>
		<item>白俄罗斯语</item>
		<item>孟加拉语</item>
		<item>波斯尼亚语</item>
		<item>保加利亚语</item>
		<item>缅甸语</item>
		<item>加泰罗尼亚语</item>
		<item>宿务语</item>
		<item>中文</item>
		<item>楚瓦什语</item>
		<item>克罗地亚语</item>
		<item>捷克语</item>
		<item>丹麦语</item>
		<item>荷兰语</item>
		<item>精灵语(辛达林语)</item>
		<item>表情符号</item>
		<item>英语</item>
		<item>世界语</item>
		<item>爱沙尼亚语</item>
		<item>芬兰语</item>
		<item>法语</item>
		<item>加里西亚语</item>
		<item>格鲁吉亚语</item>
		<item>德语</item>
		<item>希腊语</item>
		<item>古吉拉特语</item>
		<item>海地语</item>
		<item>希伯来语</item>
		<item>希尔马里语</item>
		<item>印地语</item>
		<item>匈牙利语</item>
		<item>冰岛语</item>
		<item>印度尼西亚语</item>
		<item>爱尔兰语</item>
		<item>意大利语</item>
		<item>日语</item>
		<item>爪哇语</item>
		<item>卡纳达语</item>
		<item>哈萨克语</item>
		<item>哈萨克语(拉丁语)</item>
		<item>高棉语</item>
		<item>韩语</item>
		<item>吉尔吉斯语</item>
		<item>老挝语</item>
		<item>拉丁语</item>
		<item>拉脱维亚语</item>
		<item>立陶宛语</item>
		<item>卢森堡语</item>
		<item>马其顿语</item>
		<item>马达加斯加语</item>
		<item>马来语</item>
		<item>马拉雅拉姆语</item>
		<item>马耳他语</item>
		<item>毛利语</item>
		<item>马拉地语</item>
		<item>玛丽语</item>
		<item>蒙古语</item>
		<item>尼泊尔语</item>
		<item>挪威语</item>
		<item>帕皮亚门托语</item>
		<item>波斯语</item>
		<item>波兰语</item>
		<item>葡萄牙语</item>
		<item>旁遮普语</item>
		<item>罗马尼亚语</item>
		<item>俄语</item>
		<item>苏格兰盖尔语</item>
		<item>塞尔维亚语</item>
		<item>僧伽罗语</item>
		<item>斯洛伐克语</item>
		<item>斯洛文尼亚语</item>
		<item>西班牙语</item>
		<item>圣丹内斯语</item>
		<item>斯瓦希里语</item>
		<item>瑞典语</item>
		<item>塔加洛语</item>
		<item>塔吉克语</item>
		<item>泰米尔语</item>
		<item>鞑靼语</item>
		<item>泰卢固语</item>
		<item>泰语</item>
		<item>土耳其语</item>
		<item>乌德穆尔特语</item>
		<item>乌克兰语</item>
		<item>乌尔都语</item>
		<item>乌兹别克语</item>
		<item>乌兹别克语(西里尔语)</item>
		<item>越南语</item>
		<item>威尔士语</item>
		<item>科萨语</item>
		<item>雅库特语</item>
		<item>意第绪语</item>
	</string-array>
</resources>